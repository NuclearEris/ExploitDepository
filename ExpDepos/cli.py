#!/usr/bin/env python
# -*- coding:UTF-8 -*-

"""
@Author: Castiel
@Email:  ca3tie1@gmail.com
@Blog:   https://ca3tie1.github.io
@Git:    https://github.com/ca3tie1
@Wechat: Ca5tie1
@Date:   2021/3/13 12:07
"""

import os
import sys

try:
    import ExpDepos
except ImportError:
    sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), os.path.pardir)))

from ExpDepos.libs.core.common.Common import *
from ExpDepos.libs.core.base.ExceptionBase import *
from ExpDepos.libs.core.ModuleLoader import ModuleLoader


def cli_init():
    # 初始化环境
    env_init()
    # 解析命令行参数
    parse_options()


def cli_run():
    show_banner()
    cli_init()
    run_module()


def run_module():
    module_path = env.CliOptions.module.replace("\\", os.sep).replace("/", os.sep)
    console.info("正在加载模块 {0}".format(module_path))
    try:
        module_exp = ModuleLoader.load_module_from_file(module_path)
    except Exception as error:
        console.exception(repr(error))
    if module_exp is None:
        raise Exception("模块 {0} 加载错误!".format(module_path))
    console.info("已加载模块 {0}".format(module_exp.Name))

    # 显示模块信息并退出
    if env.CliOptions.show_info:
        show_module_info(module_exp)
        exit()

    # 显示模块帮助信息并退出
    if env.CliOptions.module_help:
        module_exp.help()
        exit()
    try:
        module_exp.set_option("UserName", "admin")
    except ExpDeposValidationException as error:
        console.exception(repr(error))
    console.debug(f"{module_exp.Name} Options: {module_exp._options()}")
    module_exp.run()


if __name__ == "__main__":
    try:
        cli_run()
    except Exception as e:
        console.exception(repr(e))
    finally:
        pass
