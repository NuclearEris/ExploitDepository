#!/usr/bin/env python

"""
@Author: Castiel
@Email:  ca3tie1@gmail.com
@Blog:   https://ca3tie1.github.io
@Git:    https://github.com/ca3tie1
@Wechat: Ca5tie1
@Date:   2021/3/22 16:22
"""

import os

Config = dict()

# 版本信息
Config["VERSION"] = "0.1.210410_beta"
Config["RELEASE_DATE"] = "2021-04-06"

# 路径信息配置
Config["ROOT_PATH"] = os.path.abspath(os.path.dirname(os.path.abspath(__file__)) + "/../../".replace('/', os.sep))
Config["DEPOS_PATH"] = Config["ROOT_PATH"] + os.sep + 'ExpDepos'
Config["LIB_PATH"] = Config["DEPOS_PATH"] + os.sep + 'libs'
Config["MODULES_PATH"] = Config["DEPOS_PATH"] + os.sep + 'modules'
Config["EXPLOIT_PATH"] = Config["MODULES_PATH"] + os.sep + 'exploits'

# 日志配置
Config["LOG"] = False    # 是否开启日志记录
Config["LOG_PATH"] = Config["ROOT_PATH"] + os.sep + 'data' + os.sep + 'log'
Config["LOG_FILE"] = Config["LOG_PATH"] + os.sep + 'ExpDepos.log'

# Console 模块配置，用于控制消息输出和日志记录等级
#     msgLevel    消息输出等级(0-4)，等级越高输出越详细
#     logLevel    日志记录等级(0-4)，等级越高日志越详细
#
#     消息等级:
#         DEBUG       4
#         INFO        3
#         SUCCESS     1
#         FAILED      1
#         WARNING     2
#         ERROR       0
#         EXCEPTION   0
Config["Console"] = {"msgLevel": 4, "logLevel": 4}

"""
云函数配置,目前仅支持腾讯云
配置默认采用[{"cloudType": {"SecretId": "*****", "SecretKey": "*****", "Provisioned": {"Number": 10}}}, ...]单用户配置方式
为最大限度利用云函数资源可以使用多用户配置模式，例如：
{
    "user1":[{"cloudType": {"SecretId": "*****", "SecretKey": "*****", "Provisioned": {"Number": 10}}},...],
    "user2":[{"cloudType": {"SecretId": "*****", "SecretKey": "*****", "Provisioned": {"Number": 10}}},...],
}
其中Provisioned为函数预置并发配置项
通过设置具体函数版本的预置并发，预先启动函数实例来解决冷启动延迟问题
"""
# Config["CloudFunctions"] = [{"cloudType": {"SecretId": "*****",
#                                            "SecretKey": "*****",
#                                            "Provisioned": {"Number": 100},      # 预置并发数
#                                            "useGlobal": False}},    # 是否使用全球的地区 默认只使用国内及香港地区
#                             ...]
