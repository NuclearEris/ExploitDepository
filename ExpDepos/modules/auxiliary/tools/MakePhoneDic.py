#!/usr/bin/env python

"""
@Author: Castiel
@Email:  ca3tie1@gmail.com
@Blog:   https://ca3tie1.github.io
@Git:    https://github.com/ca3tie1
@Wechat: Ca5tie1
@Date:   2021/12/3 15:40
"""

from rich.progress import Progress
from ExpDepos.libs.core.base.ExploitBase import *


class MakePhoneDic(ExploitBase):
    Name = "Phone dic maker"
    Author = "Castiel"
    Alias = "mkphdic"
    Category = EXP_CATEGORY.TOOLS.AIDE
    VulType = VUL_TYPE.OTHER
    Create_Date = '2021-12-03'
    Update_Date = '2021-12-03'
    Rank = 'Excellent'
    AppPowerLink = ''
    AppName = ''
    AppVersion = ''
    Desc = """根据指定电话号码段生成电话号码字典"""

    def _options(self):
        options = dict()
        options["prefix"] = OptString("", description="指定电话号码段", require=False)
        options["prefix_file"] = OptString("", description="从文件中指定电话号码段", require=False)
        options["out"] = OptString("", description="结果文件输出位置", require=False)
        return options

    def _verify(self):
        return self._exploit()

    def _exploit(self):
        if not any((self.get_option("prefix"), self.get_option("prefix_file"))):
            raise ExploitValidationException("请输入或使用文件指定起始号段")
        prefix = list()
        out = None
        if self.get_option("prefix", ''):
            prefix.append(self.get_option("prefix"))

        if self.get_option("prefix_file", ''):
            file_path = self.get_option("prefix_file")
            for line in open(file_path):
                prefix.append(line)
        if self.get_option("out", ''):
            out_file = self.get_option("out")

        with Progress() as progress:
            task = progress.add_task(formatPgString("[green]正在生成字典...[/green]"), total=len(prefix) * 10000)
            i = 0
            for pf in prefix:
                pf = pf.replace("\n", "")
                j = 0
                for one in range(0, 10):
                    for two in range(0, 10):
                        for three in range(0, 10):
                            for four in range(0, 10):
                                phone = f"{pf}{one}{two}{three}{four}"
                                j += 1
                                progress.update(task, advance=1)
                                if out_file:
                                    with open(env.Config.DATA_PATH + os.sep + out_file, "a") as out:
                                        out.write(phone+"\n")
                                else:
                                    progress.print(phone)
                i += j

        self.result.success({"file": env.Config.DATA_PATH + os.sep + out_file, "total": i})
